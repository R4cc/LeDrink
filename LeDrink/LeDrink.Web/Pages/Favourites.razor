@page "/favourites"
@using LeDrink.DAL.Interfaces
@using LeDrink.DAL.Models
@using Blazorise.Animate
@inject IUnitOfWork _uow

<head>
    <link rel="stylesheet" href="/css/caro.css">
</head>

<div class="container" >
    <div class="row">
        <div class="col-2">
            <button class="btn btn-primary"  @onclick="LastCard">Last</button>
        </div>
        <div class="col-8">
            @if(_currentDrink != null)
            {
		        <RadzenCard  style="width: 100%;">
                <h3 class="h5">@_currentDrink.DrinkName</h3>
                <div class="d-flex flex-row">
                    <RadzenImage Path="@_currentDrink.ImgPath" Class="rounded-circle float-left mr-3" Style="width: 150px; height: 150px;" />
                    <div>
                        <div class="row">
                            <div>Composition</div>
                            @foreach(var mix in _currentDrink.Mixes)
                            {
                                <b>@(mix.Bottle.BottleName + ": " + mix.Milliliters + "ml")</b>
                            }
                        </div>
                    </div>
                </div>
            </RadzenCard>
            }
        </div>
        <div class="col-2">
            <button class="btn btn-primary" @onclick="NextCard">Next</button>
        </div>
    </div>
    </div>


@code {
    private List<Drink> _favDrinks = null;
    private Drink _currentDrink = null;
    private int _currentDrinkIndex = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadDrinks();
        }
    }

    private async Task LoadDrinks()
    {
        _favDrinks = (await _uow.DrinkRepo.GetDrinks()).Where(d => d.IsFavourite == true).ToList();
    }

    private async Task LastCard()
    {
        if(_currentDrinkIndex - 1  < 0)
        {
            // Sets cur index to max if its the first drink in the index
            _currentDrinkIndex = _favDrinks.Count()-1;
            _currentDrink = _favDrinks[_currentDrinkIndex];
            return;
        }
        _currentDrinkIndex--;
        _currentDrink = _favDrinks[_currentDrinkIndex];
    }

    private async Task NextCard()
    {
        if(_currentDrinkIndex + 1  > _favDrinks.Count() - 1)
        {
            // Sets cur index to first if its the last drink in the index
            _currentDrinkIndex = 0;
            _currentDrink = _favDrinks[_currentDrinkIndex];
            return;
        }
        _currentDrinkIndex++;
        _currentDrink = _favDrinks[_currentDrinkIndex];
    }

}
