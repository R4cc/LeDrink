@page "/"
@using LeDrink.DAL.Interfaces
@using LeDrink.DAL.Models
@inject IUnitOfWork _uow

<PageTitle>Lé Drink</PageTitle>

<div class="container-fluid" >
    <div style="margin-right: 10%; margin-left: 10%;">


<!-- BOTTLES -->
    <div class="row" >
        <Title Type="1">Current Bottles in Machine</Title>
        @foreach (var bottle in _allBottles.Where(b => b.BottleSlotId is not null))
        {
        <div class="col-sm" style="margin-bottom: 5%">
            <RadzenCard style="width: 100%; height: 100%;">
                <div class="container" style="text-align: center;">
                    <div class="row">
                        <h2>@($"SLOT {@bottle.BottleSlotId}")</h2>
                    </div>
                        <br/>
                    <div class="row">
                        <RadzenImage Path="@bottle.ImgPath" Style="object-fit:cover;" />
                    </div>
                        <br/>
                    <div class="row">

                            <h4>@bottle.BottleName</h4 
                    </div>
                    <div class="row">
                        <Text>@($"{bottle.CurrentMl}ml REMAINING")</Text>
                        <br/>
                        <br/>
                    </div>
                    <div class="row align-items-end">
                        <Button Style="width: 100%" Type="@AntDesign.ButtonType.Primary" Shape="@ButtonShape.Round" @onclick="@(() => ChangeBottleInSlot(bottle))">CHANGE SLOT BOTTLE</Button>
                    </div>
                </div>
            </RadzenCard>
        </div>  
        }
    </div>


<!-- DRINKS -->
    <div class="row" >
        <div class="col">
            <Title Type="1">Drinks</Title>
            <Button Shape="@ButtonShape.Round" Type="@AntDesign.ButtonType.Primary" @onclick="CreateDrink"> Add new Drink</Button>
            <hr/>
        </div>
    </div>

    <div class="row" >
            <!-- Favourite Drinks -->
            <Title Type="3">Favourite Drinks</Title>
            @foreach (var drink in _favDrinks)
            {
                <div class="col-sm" style="min-width: 440px; max-width: 440px">
                    <RadzenCard >
                        <div class="container">
                            <div class="row">
                                <div class="col" style="max-width: 160px">
                                    <RadzenImage Path="@drink.ImgPath" Class="rounded-circle float-left" Style="width:150px; height:150px; object-fit:cover;" />
                                </div>
                                <div class="col" style="margin-left: 5%">
                                    <div class="row">
                                        <h3 class="h3">@drink.DrinkName</h3>
                                        <div>Ingredients</div>
                                        @foreach (var mix in drink.Mixes)
                                        {
                                            <b>@(mix.Bottle.BottleName + ": " + mix.Milliliters + "ml")</b>
                                        }
                                    </div>
                                    <div class="row align-items-end">
                                        <div class="col">
                                            <Button @onclick="(() => EditDrink(drink.Id))" Type="@AntDesign.ButtonType.Primary"  Style="width: 100%">
                                                <Icon Type="edit" Theme="fill"/>
                                            </Button>
                                        </div>
                                        <div class="col">
                                            <Button @onclick="(() => UnFavDrink(drink.Id))" Type="@AntDesign.ButtonType.Primary" Style="width: 100%">
                                                <Icon Type="star" Theme="fill"/>
                                            </Button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </RadzenCard>
                </div>
            }
    </div>


    <hr />
    <br/>



    <!-- Other Drinks -->
   <div class="row" >
            <Title Type="3">Favourite Drinks</Title>
            @foreach (var drink in _favDrinks)
            {
                <div class="col-sm" style="min-width: 440px; max-width: 440px">
                    <RadzenCard >
                        <div class="container">
                            <div class="row">
                                <div class="col" style="max-width: 160px">
                                    <RadzenImage Path="@drink.ImgPath" Class="rounded-circle float-left" Style="width:150px; height:150px; object-fit:cover;" />
                                </div>
                                <div class="col" style="margin-left: 5%">
                                    <div class="row">
                                        <h3 class="h3">@drink.DrinkName</h3>
                                        <div>Ingredients</div>
                                        @foreach (var mix in drink.Mixes)
                                        {
                                            <b>@(mix.Bottle.BottleName + ": " + mix.Milliliters + "ml")</b>
                                        }
                                    </div>
                                    <div class="row align-items-end">
                                        <div class="col">
                                            <Button @onclick="(() => EditDrink(drink.Id))" Type="@AntDesign.ButtonType.Primary"  Style="width: 100%">
                                                <Icon Type="edit" Theme="fill"/>
                                            </Button>
                                        </div>
                                        <div class="col">
                                            <Button @onclick="(() => FavDrink(drink.Id))" Type="@AntDesign.ButtonType.Primary" Style="width: 100%">
                                                <Icon Type="star" Theme="outline"/>
                                            </Button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </RadzenCard>
                </div>
            }
    </div>



    <!-- DRINK MODAL LOGIC-->
    @if (_showDrinkModal && _drinkInModal != null && !_drinkModalIsEdit)
    {
        <LeDrink.Web.Shared.Components.DrinkModal _drink="_drinkInModal" OnValidSubmit="OnValidDrinkSubmitCreate" HeaderText="Create Drink"/>
    }
    @if (_showDrinkModal && _drinkInModal != null && _drinkModalIsEdit)
    {
        <LeDrink.Web.Shared.Components.DrinkModal _drink="_drinkInModal" OnValidSubmit="OnValidDrinkSubmitEdit" HeaderText="Edit Drink"/>
    }

    <!-- BOTTLE MODAL LOGIC-->
    @if (_showBottleCrudModal && _bottleInCrudModal != null && !_bottleCrudModalIsEdit)
    {
        <LeDrink.Web.Shared.Components.BottleModal _drink="_drinkInModal" OnValidSubmit="OnValidBottleSubmitCreate" HeaderText="Create Bottle"/>
    }
    @if (_showBottleCrudModal && _bottleInCrudModal != null && _bottleCrudModalIsEdit)
        {
            <LeDrink.Web.Shared.Components.BottleModal _selectedBottle="_bottleInCrudModal" OnValidSubmit="OnValidBottleSubmitEdit" HeaderText="Edit DrinkBottle"/>
        }

    @if (_showChangeBottleModal && _selectedSlotId != null)
    {
        <LeDrink.Web.Shared.Components.ChangeBottleModal BottleSlotId="_selectedSlotId" _allBottles=_allBottles _selectedBottle=_chosenBottle OnValidSubmit=OnValidBottleChangeSubmit/>
    }
    </div>
</div>


@code{
    private List<Drink> _favDrinks = new();
    private List<Drink> _nonFavDrinks = new();
    private List<Bottle> _allBottles = new();


    private bool _showDrinkModal { get; set; }
    private Drink _drinkInModal { get; set; }
    private bool _drinkModalIsEdit { get; set; }

    private bool _showBottleCrudModal { get; set; }
    private Bottle _bottleInCrudModal { get; set; }
    private bool _bottleCrudModalIsEdit { get; set; }

    // For Bottle changer Modal
    private bool _showChangeBottleModal { get; set; }
    private int _selectedSlotId { get; set; }
    private Bottle _chosenBottle = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDrinks();
        await LoadBottles();
    }

    private async Task LoadDrinks()
    {
        // Load from repo
        var _allDrinks = await _uow.DrinkRepo.GetDrinks();

        // Add mixes to drinks
        foreach(var drink in _allDrinks)
        {
            drink.Mixes = await _uow.MixRepo.GetMixesFromDrinkId(drink.Id);
        }

        // Favourite status Loading
        _favDrinks = _allDrinks.Where(d => d.IsFavourite == true).ToList();
        _nonFavDrinks = _allDrinks.Where(d => d.IsFavourite == false).ToList();
    }

    private async Task LoadBottles()
    {
        _allBottles = (await _uow.BottleRepo.GetBottles())
                                .OrderBy(b => b.BottleSlotId).ToList();
    }

    private async Task ChangeBottleInSlot(Bottle bottle)
    {
        _chosenBottle = bottle;
        _selectedSlotId = (int)bottle.BottleSlotId;
        _showChangeBottleModal = true;
    }

    private void EditDrink(int drinkId)
    {
        _drinkModalIsEdit = true;
        _drinkInModal = _favDrinks.FirstOrDefault(x => x.Id == drinkId);
        _showDrinkModal = true;
    }

    private void CreateDrink()
    {
        _drinkModalIsEdit = false;
        _drinkInModal = new();
        _showDrinkModal = true;
    }

    private async Task OnValidDrinkSubmitCreate(Drink drink)
    {
        if(drink is null)
        {
            await CancelSubmit();
            return;
        }

        // Create new Drink
        await _uow.DrinkRepo.AddDrink(drink);
        await _uow.SaveChanges();
        _showDrinkModal = false;
        _drinkInModal = null;
    }

    private async Task OnValidDrinkSubmitEdit(Drink drink)
    {
        if(drink is null)
        {
            await CancelSubmit();
            return;
        }

        // Update existing Drink
        await _uow.DrinkRepo.UpdateDrink(drink);
        await _uow.SaveChanges();
        _showDrinkModal = false;
        _drinkInModal = null;
    }

    private async Task OnValidBottleSubmitCreate(Bottle bottle)
    {
        if(bottle is null)
        {
            await CancelSubmit();
            return;
        }

        // Create new Drink
        await _uow.BottleRepo.AddBottle(bottle);
        await _uow.SaveChanges();
        _showBottleCrudModal = false;
        _bottleInCrudModal = null;
    }

    private async Task OnValidBottleSubmitEdit(Bottle bottle)
    {
        if(bottle is null)
        {
            await CancelSubmit();
            return;
        }

        // Update existing Drink
        await _uow.BottleRepo.UpdateBottle(bottle);
        await _uow.SaveChanges();
        _showBottleCrudModal = false;
        _bottleInCrudModal = null;
    }

    private async Task OnValidBottleChangeSubmit(Bottle bottle)
    {
        
        if(bottle is null)
        {
            await CancelSubmit();
            return;
        }

        _chosenBottle.BottleSlotId = null;

        // Update drink
        await _uow.BottleRepo.UpdateBottle(_chosenBottle);
        await _uow.BottleRepo.UpdateBottle(bottle);
        _showChangeBottleModal = false;
        _chosenBottle = null;
        _selectedSlotId = 0;
    }

    private async Task CancelSubmit()
    {
        _showDrinkModal = false;
        _drinkInModal = null;

        _showBottleCrudModal = false;
        _bottleInCrudModal = null;
    }


    private async Task FavDrink(int drinkId)
    {
        
    }

    private async Task UnFavDrink(int drinkId)
    {
        
    }

    private async Task RemoveDrink(int drinkId)
    {
        
    }
}